[["TOTAL_ARGUMENT == 'print(f)'", ['', NameError("name 'f' is not defined",)]]]
[['TOTAL_ARGUMENT == \'print("the bloom that flies away")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print("the bloom that flies away")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['the bloom that flies away\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print("the bloom that flies away")\\\'\', [\'None\', \'\']]]\'', [['TOTAL_ARGUMENT == \'print("the bloom that flies away")\'', ['None', '']]]]]
[['TOTAL_ARGUMENT == \'print("bukDetect")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print("bukDetect")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['bukDetect\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print("bukDetect")\\\'\', [\'None\', \'\']]]\'', [['TOTAL_ARGUMENT == \'print("bukDetect")\'', ['None', '']]]]]
[['TOTAL_ARGUMENT == \'print("xQc")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print("xQc")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['xQc\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print("xQc")\\\'\', [\'None\', \'\']]]\'', [['TOTAL_ARGUMENT == \'print("xQc")\'', ['None', '']]]]]
[['TOTAL_ARGUMENT == \'print(""rasca;")\'', ['', SyntaxError('invalid syntax', ('<string>', 1, 13, 'print(""rasca;")'))]]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print(""rasca;")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['error is  invalid syntax (<string>, line 1)\\n']\n", "['code died\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print(""rasca;")\\\'\', [\'\', SyntaxError(\'invalid syntax\', (\'<string>\', 1, 13, \'print(""rasca;")\'))]]]\'', [['TOTAL_ARGUMENT == \'print(""rasca;")\'', ['', SyntaxError('invalid syntax', ('<string>', 1, 13, 'print(""rasca;")'))]]]]]
[["TOTAL_ARGUMENT == 'rint()'", ['', NameError("name 'rint' is not defined",)]]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, rint()], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ['["error is  name \'rint\' is not defined\\n"]\n', "['code died\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[["TOTAL_ARGUMENT == \'rint()\'", [\'\', NameError("name \'rint\' is not defined",)]]]\'', [["TOTAL_ARGUMENT == 'rint()'", ['', NameError("name 'rint' is not defined",)]]]]]
[['TOTAL_ARGUMENT == \'print("UNLEASH FORCE")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print("UNLEASH FORCE")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['UNLEASH FORCE\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print("UNLEASH FORCE")\\\'\', [\'None\', \'\']]]\'', [['TOTAL_ARGUMENT == \'print("UNLEASH FORCE")\'', ['None', '']]]]]
[["TOTAL_ARGUMENT == '1+7'", ['8', '']]]
[["TOTAL_ARGUMENT == '??'", ['', SyntaxError('invalid syntax', ('<string>', 1, 1, '??'))]]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, ??], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['error is  invalid syntax (<string>, line 1)\\n']\n", "['code died\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[["TOTAL_ARGUMENT == \'??\'", [\'\', SyntaxError(\'invalid syntax\', (\'<string>\', 1, 1, \'??\'))]]]\'', [["TOTAL_ARGUMENT == '??'", ['', SyntaxError('invalid syntax', ('<string>', 1, 1, '??'))]]]]]
[["TOTAL_ARGUMENT == 'hi'", ['', NameError("name 'hi' is not defined",)]]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, hi], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ['["error is  name \'hi\' is not defined\\n"]\n', "['code died\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[["TOTAL_ARGUMENT == \'hi\'", [\'\', NameError("name \'hi\' is not defined",)]]]\'', [["TOTAL_ARGUMENT == 'hi'", ['', NameError("name 'hi' is not defined",)]]]]]
[['TOTAL_ARGUMENT == \'print("rickroll")\'', ['None', '']]]
[["TOTAL_ARGUMENT == 'print('oof')'", ['None', '']]]
[['a', 2]]
[["TOTAL_ARGUMENT == ''a''", ['a', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, 'a'], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", []]]
[["TOTAL_ARGUMENT == 'print('len1 or lenl')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('len1 or lenl')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['len1 or lenl\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('defective loneliness')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('defective loneliness')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['defective loneliness\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('garbage dogshit')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('garbage dogshit')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['garbage dogshit\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('reset autism')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('reset autism')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['reset autism\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('empty guy')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('empty guy')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['empty guy\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('remember me')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('oof')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['oof\\n']\n", "['already saw that 2\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('she is the one named sailor moon')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('she is the one named sailor moon')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['she is the one named sailor moon\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('break')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('break')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['break\\n']\n"]]]
[['TOTAL_ARGUMENT == \'print("don\'t tell me cause it hurts don\'t speak")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print("don\'t tell me cause it hurts don\'t speak")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ['["don\'t tell me cause it hurts don\'t speak\\n"]\n']]]
[["TOTAL_ARGUMENT == 'print('order matters')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('order matters')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['order matters\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('what do I have now')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('what do I have now')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['what do I have now\\n']\n"]]]
[["TOTAL_ARGUMENT == 'print('double check this')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('double check this')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['double check this\\n']\n"]]]
[["TOTAL_ARGUMENT == 'test'", ['', NameError("name 'test' is not defined",)]]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, test], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ['["error is  name \'test\' is not defined\\n"]\n', "['code died\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[["TOTAL_ARGUMENT == \'test\'", [\'\', NameError("name \'test\' is not defined",)]]]\'', [["TOTAL_ARGUMENT == 'test'", ['', NameError("name 'test' is not defined",)]]]]]
[["TOTAL_ARGUMENT == 'print('check')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\Mira.py, print('check')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['check\\n']\n"]]]
[['TOTAL_ARGUMENT == \'print("resettto")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\Mira.py, print("resettto")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['resettto\\n']\n"]]]
[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print("resettto")\\\'\', [\'None\', \'\']]]\'', [['TOTAL_ARGUMENT == \'print("resettto")\'', ['None', '']]]]]
