[["TOTAL_ARGUMENT == 'print('yoikes')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('yoikes')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'yoikes\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['yoikes\\n']\n", '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'yoikes\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'yoikes\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['yoikes\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'yoikes\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('yoikes')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'yoikes\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['yoikes\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['yoikes\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('yoikes')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('yoikes')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('yoikes')],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["TOTAL_ARGUMENT == 'print('cmonBrug')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('cmonBrug')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'cmonBrug\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['cmonBrug\\n']\n", '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'cmonBrug\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'cmonBrug\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['cmonBrug\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'cmonBrug\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('cmonBrug')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'cmonBrug\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['cmonBrug\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['cmonBrug\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('α1')α2,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2')],α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,[α0print('cmonBrug')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('cmonBrug')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2')α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('cmonBrug')],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["TOTAL_ARGUMENT == 'print('resetto')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('resetto')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'resetto\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['resetto\\n']\n", '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'resetto\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'resetto\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['resetto\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'resetto\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('resetto')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'resetto\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['resetto\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['resetto\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('α1esα2,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,[α0print('resetto')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('resetto')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["TOTAL_ARGUMENT == 'print('check this')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('check this')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'check this\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['check this\\n']\n", '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'check this\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'check this\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['check this\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'check this\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('check this')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'check this\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['check this\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['check this\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('α1s')α2,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0s')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2s')],α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,[α0print('cα1')α2,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('cα2')],α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,[α0print('check this')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('check this')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2s')α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('cα2')α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('check this')],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["TOTAL_ARGUMENT == 'print('hax')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('hax')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'hax\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['hax\\n']\n", '[\'wtf nearfieldClone3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'hax\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'hax\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['hax\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'hax\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('hax')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'hax\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['hax\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfieldClone3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['hax\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[['TOTAL_ARGUMENT == \'print("oof")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\MIRA_B\\Mira.py, print("oof")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['wtf nearfield []\\n']\n", '[\'how many attempts? True [\\\'print("oof")\\\']\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['oof\\n']\n", '[\'wtf nearfieldClone3 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("oof")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfieldClone2 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("oof")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['oof\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfieldClone3 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("oof")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[['Popen([\'python\',C:\\An\\MIRA\\MIRA_B\\Mira.py, print("oof")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['wtf nearfield []\\n']\n", '[\'how many attempts? True [\\\'print("oof")\\\']\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['oof\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfieldClone3 []\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['oof\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfieldClone3 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('hax')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('hax')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[α0print(α1esα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,α0([α1print(α2)],α3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[α0print(α1ruα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print(α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("oof")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("oof")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['TOTAL_ARGUMENT == \'Popen([\'python\',\'C:\\An\\MIRA\\MIRA_B\\Mira.py\', "print(\'yoikes\')"], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)\'', ['<subprocess.Popen object at 0x00CD13B0>', '']]]
[['TOTAL_ARGUMENT == \'Popen([\'python\',\'C:\\An\\MIRA\\MIRA_B\\Mira.py\', "print(\'yoikes\')"], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)\'', ['<subprocess.Popen object at 0x00CD1450>', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, Popen(['python',C:\\\\An\\\\MIRA\\\\MIRA_B\\\\Mira.py, print('yoikes')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["Popen([\\\'python\\\',C:\\\\\\\\\\\\\\\\An\\\\\\\\\\\\\\\\MIRA\\\\\\\\\\\\\\\\MIRA_B\\\\\\\\\\\\\\\\Mira.py, print(\\\'yoikes\\\')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['Traceback (most recent call last):\\n']\n", '[\'  File "C:\\\\An\\\\MIRA\\\\Mira.py", line 53, in <module>\\n\']\n', '["    nearfield = TestCode([open(MemoryUNORDERED, \'a+\'),inputtext,nearfield,memoryLong,basisname,MemoryUNORDERED,Descent])\\n"]\n', '[\'  File "C:\\\\An\\\\MIRA\\\\MiraExternals.py", line 5347, in TestCode\\n\']\n', '[\'    internaltest2 = [["TOTAL_ARGUMENT == \\\'"+ str(inputtext) +"\\\'",[str(eval(inputtext)),""]]]\\n\']\n', '[\'  File "<string>", line 1\\n\']\n', '["    Popen([\'python\',C:\\\\\\\\An\\\\\\\\MIRA\\\\\\\\MIRA_B\\\\\\\\Mira.py, print(\'yoikes\')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)\\n"]\n', "['                     ^\\n']\n", "['SyntaxError: invalid syntax\\n']\n"]]]
