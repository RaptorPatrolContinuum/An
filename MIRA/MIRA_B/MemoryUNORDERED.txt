[["TOTAL_ARGUMENT == 'print('diplomacy')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('diplomacy')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'diplomacy\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['diplomacy\\n']\n", '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'diplomacy\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'diplomacy\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['diplomacy\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'diplomacy\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('diplomacy')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'diplomacy\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['diplomacy\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['diplomacy\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('diplomacy')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('diplomacy')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('diplomacy')],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["TOTAL_ARGUMENT == 'print('7 spider eyes for every day of the wek')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('7 spider eyes for every day of the wek')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'7 spider eyes for every day of the wek\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['7 spider eyes for every day of the wek\\n']\n", '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'7 spider eyes for every day of the wek\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'7 spider eyes for every day of the wek\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['7 spider eyes for every day of the wek\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'7 spider eyes for every day of the wek\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('7 spider eyes for every day of the wek')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'7 spider eyes for every day of the wek\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['7 spider eyes for every day of the wek\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['7 spider eyes for every day of the wek\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,[α0print('α1')α2,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2')],α3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,[α0print('7 spider eyes for every day of the wek')],TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, print('7 spider eyes for every day of the wek')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,α0([α1print('7 spider eyes for every day of the wek')],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
