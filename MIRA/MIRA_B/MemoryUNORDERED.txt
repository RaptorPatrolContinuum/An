[['TOTAL_ARGUMENT == \'print("yoikes don\\\'t worry about apostrophes if you have a good enough description")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\MIRA_B\\Mira.py, print("yoikes don\\\'t worry about apostrophes if you have a good enough description")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['wtf nearfield []\\n']\n", '[\'how many attempts? True [\\\'print("yoikes don\\\\\\\\\\\\\\\'t worry about apostrophes if you have a good enough description")\\\']\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", '["yoikes don\'t worry about apostrophes if you have a good enough description\\n"]\n', '[\'wtf nearfieldClone3 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("yoikes don\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'t worry about apostrophes if you have a good enough description")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfieldClone2 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("yoikes don\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'t worry about apostrophes if you have a good enough description")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '["yoikes don\'t worry about apostrophes if you have a good enough description\\n"]\n', "['already saw that 2\\n']\n", '[\'wtf nearfieldClone3 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("yoikes don\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'t worry about apostrophes if you have a good enough description")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[['Popen([\'python\',C:\\An\\MIRA\\MIRA_B\\Mira.py, print("yoikes don\\\'t worry about apostrophes if you have a good enough description")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['wtf nearfield []\\n']\n", '[\'how many attempts? True [\\\'print("yoikes don\\\\\\\\\\\\\\\'t worry about apostrophes if you have a good enough description")\\\']\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", '["yoikes don\'t worry about apostrophes if you have a good enough description\\n"]\n', "['already saw that 2\\n']\n", "['wtf nearfieldClone3 []\\n']\n", "['wtf nearfieldClone2 []\\n']\n", '["yoikes don\'t worry about apostrophes if you have a good enough description\\n"]\n', "['already saw that 2\\n']\n", "['wtf nearfieldClone3 []\\n']\n"]]]
[['FixedQualifier([delta2,α0print("yoikes don\\\'t worry about apostrophes if you have a good enough description")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0\\Mira.py, print("yoikes don\\\'t worry about apostrophes if you have a good enough description")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0print("yoikes don\\\'t worry about apostrophes if you have a good enough description")],α1erα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, restarting], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '["how many attempts? True [\'restarting\']\\n"]\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfieldClone2 []\\n']\n", "['Traceback (most recent call last):\\n']\n", '[\'  File "C:\\\\An\\\\MIRA\\\\Mira.py", line 53, in <module>\\n\']\n', '["    nearfield = TestCode([open(MemoryUNORDERED, \'a+\'),inputtext,nearfield,memoryLong,basisname,MemoryUNORDERED,Descent])\\n"]\n', '[\'  File "C:\\\\An\\\\MIRA\\\\MiraExternals.py", line 5349, in TestCode\\n\']\n', '[\'    internaltest2 = [["TOTAL_ARGUMENT == \\\'"+ str(inputtext) +"\\\'",[str(eval(inputtext)),""]]]\\n\']\n', '[\'  File "<string>", line 1, in <module>\\n\']\n', '["NameError: name \'restarting\' is not defined\\n"]\n']]]
[["FixedQualifier([delta2,['α0outα1stα2,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,α0\\Mira.py, α1], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1outα2stα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,['pα0inα1,TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0\\Mira.py, restarting], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
