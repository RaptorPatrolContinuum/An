[["TOTAL_ARGUMENT == 'print('g')'", ['None', '']]]
[["Popen(['python',C:\\An\\MIRA\\MIRA_B\\Mira.py, print('g')], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)", ["['wtf nearfield []\\n']\n", '[\'how many attempts? True ["print(\\\'g\\\')"]\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['g\\n']\n", '[\'shittysearch uses eval have to double check if it fucking works properly2 [] [["TOTAL_ARGUMENT == \\\'print(\\\'g\\\')\\\'", [\\\'None\\\', \\\'\\\']]]\\n\']\n', '[\'wtf nearfield3 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'g\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'g\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['g\\n']\n", "['line vs arg2\\n']\n", '[\'[["TOTAL_ARGUMENT == \\\'print(\\\'g\\\')\\\'", [\\\'None\\\', \\\'\\\']]] <class \\\'str\\\'>\\n\']\n', '[\'[["TOTAL_ARGUMENT == \\\'print(\\\'g\\\')\\\'", [\\\'None\\\', \\\'\\\']]] <class \\\'str\\\'>\\n\']\n', "['True\\n']\n", '[\'shittysearch uses eval have to double check if it fucking works properly4 [0] [["TOTAL_ARGUMENT == \\\'print(\\\'g\\\')\\\'", [\\\'None\\\', \\\'\\\']]]\\n\']\n', "['line vs arg2\\n']\n", '[\'[["TOTAL_ARGUMENT == \\\'print(\\\'g\\\')\\\'", [\\\'None\\\', \\\'\\\']]] <class \\\'str\\\'>\\n\']\n', '[\'[["TOTAL_ARGUMENT == \\\'print(\\\'g\\\')\\\'", [\\\'None\\\', \\\'\\\']]] <class \\\'str\\\'>\\n\']\n', "['True\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[["TOTAL_ARGUMENT == \\\\\\\'print(\\\\\\\'g\\\\\\\')\\\\\\\'", [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[['TOTAL_ARGUMENT == \'print("rains")\'', ['None', '']]]
[['TOTAL_ARGUMENT == \'print("pls finish")\'', ['None', '']]]
[['Popen([\'python\',C:\\An\\MIRA\\MIRA_B\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['wtf nearfield []\\n']\n", '[\'how many attempts? True [\\\'print("pls finish")\\\']\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['pls finish\\n']\n", '[\'wtf nearfield3 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("pls finish")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', '[\'wtf nearfield4 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("pls finish")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n', "['pls finish\\n']\n", "['already saw that 2\\n']\n", '[\'wtf nearfield5 [\\\'[[\\\\\\\'TOTAL_ARGUMENT == \\\\\\\\\\\\\\\'print("pls finish")\\\\\\\\\\\\\\\'\\\\\\\', [\\\\\\\'None\\\\\\\', \\\\\\\'\\\\\\\']]]\\\']\\n\']\n']]]
[['Popen([\'python\',C:\\An\\MIRA\\MIRA_B\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True)', ["['wtf nearfield []\\n']\n", '[\'how many attempts? True [\\\'print("pls finish")\\\']\\n\']\n', "['tell me encoding cp1252\\n']\n", "['wtf nearfield2 []\\n']\n", "['pls finish\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield3 []\\n']\n", "['wtf nearfield4 []\\n']\n", "['pls finish\\n']\n", "['already saw that 2\\n']\n", "['wtf nearfield5 []\\n']\n"]]]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("α2fiα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,α0([α1print("pls finish")],α2erα3,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[["FixedQualifier([delta2,Popen(['python',C:\\α0)], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])", '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("α1inα2,TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,[\'α0print("pls finish")],TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
[['FixedQualifier([delta2,Popen([α0\\Mira.py, print("pls finish")], stdout=PIPE, stderr=STDOUT, bufsize=1, universal_newlines=True),TOTAL_ARGUMENT,FixedQualifiermin1])', '']]
