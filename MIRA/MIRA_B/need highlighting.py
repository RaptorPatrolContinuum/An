


[[['1','2'],['3','1']],[['4','4'],['5','5']]]
ShittySI([[[['1','2'],['3','1']],[['4','4'],['5','5']]],"Auto","all"])



[[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]]
{
'0': [[[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]], [[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\''], ['")\\\'\', [\'']], [['α1'], ['α1']]]], 
'1': [[[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]]], 
'2': [[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print("bukDetect")\\\'\', [\'None\', \'\']]]\'', [['TOTAL_ARGUMENT == \'print("bukDetect")\'', ['None', '']]]]]], 
'3': [[['TOTAL_ARGUMENT == \'[[\'TOTAL_ARGUMENT == \\\'print(""rasca;")\\\'\', [\'\', SyntaxError(\'invalid syntax\', (\'<string>\', 1, 13, \'print(""rasca;")\'))]]]\'', [['TOTAL_ARGUMENT == \'print(""rasca;")\'', ['', SyntaxError('invalid syntax', ('<string>', 1, 13, 'print(""rasca;")'))]]]]]], 
'4': [[[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]], [[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\''], ['")\\\'\', [\'']], [['α1'], ['α1']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [['rint('], ['rint(']], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [[", ['', "], [", ['', "]], [['α2'], ['α2']]]], 
'5': [[[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]]], 
'6': [[[['α0'], ['α0']], [["['"], ["['"]], [['the bloom that flies away'], ['the bloom that flies away']], [['α1'], ['α1']], [["']"], ["']"]], [['α2'], ['α2']]], [[['["[\''], ['["[\'']], [['α0'], ['α0']], [['\\\\n\']\\n"]'], ['\\\\n\']\\n"]']]], [[['['], ['[']], [["['"], ["['"]], [['α0'], ['α0']], [["']"], ["']"]], [['α1'], ['α1']]], [[['α0'], ['α0']], [['"[\''], ['"[\'']], [['α1'], ['α1']], [['\\\\n\']\\n"]'], ['\\\\n\']\\n"]']]], [[['["'], ['["']], [["['"], ["['"]], [['α0'], ['α0']]], [[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]], [[['α0'], ['α0']], [[" \\'"], [" \\'"]], [['rint'], ['rint']], [['α1'], ['α1']], [["', "], ["', "]], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [['rint('], ['rint(']], [['α2'], ['α2']]], [[["['"], ["['"]], [['α0'], ['α0']], [[" \\'"], [" \\'"]], [['α1'], ['α1']], [["', "], ["', "]], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [[", ['"], [", ['"]], [['α2'], ['α2']]], [[['['], ['[']], [["['"], ["['"]], [['α0'], ['α0']], [['on'], ['on']], [['α1'], ['α1']]], [[['α0'], ['α0']], [["['"], ["['"]], [['bukDetect'], ['bukDetect']], [['α1'], ['α1']], [["']"], ["']"]], [['α2'], ['α2']]], [[['α0'], ['α0']], [["['"], ["['"]], [['α1'], ['α1']], [['ect'], ['ect']], [['α2'], ['α2']], [['on'], ['on']], [['α3'], ['α3']]], [[['α0'], ['α0']], [["['"], ["['"]], [['xQc'], ['xQc']], [['α1'], ['α1']], [["']"], ["']"]], [['α2'], ['α2']]], [[['α0'], ['α0']], [["'rint"], ["'rint"]], [['α1'], ['α1']], [["' is not defined"], ["' is not defined"]], [['"'], ['"']], [['α2'], ['α2']]], [[['α0'], ['α0']], [['name '], ['name ']], [['α1'], ['α1']], [["' is not defined"], ["' is not defined"]], [['"'], ['"']], [['α2'], ['α2']]], [[['α0'], ['α0']], [["['"], ["['"]], [['UNLEASH FORCE'], ['UNLEASH FORCE']], [['α1'], ['α1']], [["']"], ["']"]], [['α2'], ['α2']]]], 
'7': [], 
'8': [[[['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [[", ['', SyntaxError('invalid syntax', ('<string>', 1, 1"], [", ['', SyntaxError('invalid syntax', ('<string>', 1, 1"]], [['α2'], ['α2']], [["'))]]]"], ["'))]]]"]]]], 
'9': [[[['α0'], ['α0']], [["['"], ["['"]], [['the bloom that flies away'], ['the bloom that flies away']], [['α1'], ['α1']], [["']"], ["']"]], [['α2'], ['α2']]], [[['['], ['[']], [["['"], ["['"]], [['α0'], ['α0']], [["']"], ["']"]], [['α1'], ['α1']]], [[['["[\''], ['["[\'']], [['α0'], ['α0']], [['\\\\n\']\\n"]'], ['\\\\n\']\\n"]']]], [[['['], ['[']], [["['"], ["['"]], [['α0'], ['α0']], [['li'], ['li']], [['α1'], ['α1']]], [[['α0'], ['α0']], [['"[\''], ['"[\'']], [['α1'], ['α1']], [['\\\\n\']\\n"]'], ['\\\\n\']\\n"]']]], [[['["'], ['["']], [["['"], ["['"]], [['α0'], ['α0']]], [[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]], [[['α0'], ['α0']], [["['"], ["['"]], [['α1'], ['α1']], [['rin'], ['rin']], [['α2'], ['α2']], [[', '], [', ']], [['α3'], ['α3']]], [[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\''], ['")\\\'\', [\'']], [['α1'], ['α1']]], [[['α0'], ['α0']], [[" \\'"], [" \\'"]], [['rint'], ['rint']], [['α1'], ['α1']], [["', "], ["', "]], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [['rint('], ['rint(']], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [[", ['"], [", ['"]], [['α2'], ['α2']]], [[["['"], ["['"]], [['α0'], ['α0']], [[" \\'"], [" \\'"]], [['α1'], ['α1']], [["', "], ["', "]], [['α2'], ['α2']]], [[['['], ['[']], [["['"], ["['"]], [['α0'], ['α0']], [['on'], ['on']], [['α1'], ['α1']]], [[['α0'], ['α0']], [["['"], ["['"]], [['α1'], ['α1']], [['ect'], ['ect']], [['α2'], ['α2']], [['on'], ['on']], [['α3'], ['α3']]], [[['α0'], ['α0']], [['rror'], ['rror']], [['α1'], ['α1']], [['invalid syntax'], ['invalid syntax']], [['α2'], ['α2']], [['<string>'], ['<string>']], [['α3'], ['α3']]], [[['["'], ['["']], [['α0'], ['α0']], [['rror'], ['rror']], [[' is '], [' is ']], [['α1'], ['α1']]], [[['α0'], ['α0']], [["['"], ["['"]], [['α1'], ['α1']], [['rin'], ['rin']], [['α2'], ['α2']], [[')\\'], [')\\']], [['α3'], ['α3']]], [[["['"], ["['"]], [['α0'], ['α0']], [['rror'], ['rror']], [['α1'], ['α1']], [['rint'], ['rint']], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [[", ['', "], [", ['', "]], [['α2'], ['α2']]], [[["['"], ["['"]], [['α0'], ['α0']], [['rror'], ['rror']], [['α1'], ['α1']], [["', "], ["', "]], [['α2'], ['α2']]], [[['['], ['[']], [["['"], ["['"]], [['α0'], ['α0']], [['i'], ['i']], [['α1'], ['α1']]], [[['α0'], ['α0']], [["'rint"], ["'rint"]], [['α1'], ['α1']], [["' is not defined"], ["' is not defined"]], [['"'], ['"']], [['α2'], ['α2']]], [[['α0'], ['α0']], [['["'], ['["']], [['α1'], ['α1']], [['rror'], ['rror']], [['α2'], ['α2']], [["', "], ["', "]], [['α3'], ['α3']]], [[['α0'], ['α0']], [['name '], ['name ']], [['α1'], ['α1']], [["' is not defined"], ["' is not defined"]], [['"'], ['"']], [['α2'], ['α2']]]], 
'10': [[[['[[\'TOTAL_ARGUMENT == \\\'print("'], ['[[\'TOTAL_ARGUMENT == \\\'print("']], [['α0'], ['α0']], [['")\\\'\', [\'None\', \'\']]]'], ['")\\\'\', [\'None\', \'\']]]']]], [[['α0'], ['α0']], [[" \\'"], [" \\'"]], [['rint'], ['rint']], [['α1'], ['α1']], [["', "], ["', "]], [['α2'], ['α2']]], [[['[['], ['[[']], [['α0'], ['α0']], [['TOTAL_ARGUMENT == '], ['TOTAL_ARGUMENT == ']], [['α1'], ['α1']], [['rint('], ['rint(']], [['α2'], ['α2']]], [[['α0'], ['α0']], [["'rint"], ["'rint"]], [['α1'], ['α1']], [["' is not defined"], ["' is not defined"]], [['"'], ['"']], [['α2'], ['α2']]]], 
'11': [], 
'12': []}

((critchancemod*critmultmod*(basedmgmod + basedmgmod*elementalstotal + basedmgmod*physicalbonusmod)) + ((1-critchancemod)(*basedmgmod + basedmgmod*elementalstotal + basedmgmod*physicalbonusmod)))*fireratemod


(
	(critchancemod*critmultmod*(basedmgmod + basedmgmod*elementalstotal + basedmgmod*physicalbonusmod)) + 
	((1-critchancemod)(*basedmgmod + basedmgmod*elementalstotal + basedmgmod*physicalbonusmod))
	)*fireratemod

TotalSI([[[['1', '0'], ['0', '1'], ['0', '2'], ['4', '0']], [['3', '0'], ['2', '1'], ['1', '2'], ['4', '0'], ['2', '2']]],"Auto"])


STEP 1: MAKE SI STRUCTURES

[['1','2'],['2','3'],['3','1'],['3','4']]

[['1b','2b'],['2b','3b'],['3b','1b']]

STEP 2: REPLACE EACH INTEGER WITH A FUNCTION

HINT: MAKE DIFFERENT BUT TOTALLY SI FUNCTIONS!


1: quine dot
[['single','single']]
[['loner','loner']]

2: line
[['oneway','oneway']]
[['unrequited','unrequited']]

3: triangle
[['A','B'],['B','C'],['C','A']]
[['z','y'],['y','x'],['x','z']]


4: square
[['art','gallery'],['gale','wind'],['gallery','gale'],['wind','art']]
[['tree','cow'],['bird','flight'],['cow','bird'],['flight','tree']]


:try to test the min function as well
[[[['single','single']],[['oneway','oneway']]],[[['oneway','oneway']],[['A','B'],['B','C'],['C','A']]],[[['A','B'],['B','C'],['C','A']],[['single','single']]],[[['A','B'],['B','C'],['C','A']],[['art','gallery'],['gale','wind'],['gallery','gale'],['wind','art']]]]

[['[[\'loner\',\'loner\']]','[[\'unrequited\',\'unrequited\']]'],['[[\'unrequited\',\'unrequited\']]','[[\'z\',\'y\'],[\'y\',\'x\'],[\'x\',\'z\']]'],['[[\'z\',\'y\'],[\'y\',\'x\'],[\'x\',\'z\']]','[[\'loner\',\'loner\']]']]