






    
    
        and fileinsertat
    write stuff down in one go
[['a', 2]]
    figure out the offset
    figure out the offset
    =
    plan:
    stats:
        else:
    strategy:
    '''
[['b','b']]
[[print(,'b']]
[['argument_1 == "a"', 1+1]]
    attempt to append from unordered to ordered
    attempt to append from recentlyordered to ordered
    HINT:
    >basislist
    >linearly ordered memory
    >linearly UNordered memory
        HINT: arg2 can be an empty file
    PROBLEM:
	'''
        if len(arg) > 0:
    arg1 = basis FILENAME
    then in one go, just rewrite and append properly
            #write shit
            return [obj,index]
    keep the pairs: [obj,index]
        >look at .write()
    >on bisectioninsert/min, add a flag
    ORDER UNORDERED LIST FIRST,THEN INSERT INTO ORDERED LIST
    arg3 = unordered memory FILENAME
    INSERTING UNORDERED LIST INTO ORDERED LIST THAT IS EMPTY
    arg2 = linearly ordered memory FILENAME in open(filename,???) format
    do a 'hard' sort on the unordered memory so insertion order doesn't matter
    then on lexico sort, change the argument to include the unordered memory
    need function that does lexicographic ordering on ORDERED AND UNORDERED memory files using basislist
    hint: order unordered list in the 'hardcore' mode, aka just rewriting file and renaming so you guarantee insertion is ok
    THEN YOU INSERT IN ORDER OF INSERTION WHICH IS NOT ACCORDING TO ORDER
    then on bisectioninsertmin if flag is true, then instead of writing, just return the pair: [obj,index]
['test', ['', NameError("name 'test' is not defined",)]]
['teste', ["python: can't open file 'test.py': [Errno 2] No such file or directory\n"]]
['print("test")', ["python: can't open file 'test.py': [Errno 2] No such file or directory\n"]]
['print("test")', ["python: can't open file 'test.py': [Errno 2] No such file or directory\n"]]
['print("test")', ['exit or logout to leave \n']]
['print("test")', ['Traceback (most recent call last):\n']]
['print("test")', ['  File "Mira.py", line 28, in <module>\n']]
['print("test")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("test")', ['EOFError: EOF when reading a line\n']]
['test', ['exit or logout to leave \n']]
['test', ['Traceback (most recent call last):\n']]
['test', ['  File "Mira.py", line 28, in <module>\n']]
['test', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['test', ['EOFError: EOF when reading a line\n']]
['print("test")', ['exit or logout to leave \n']]
['print("test")', ['Traceback (most recent call last):\n']]
['print("test")', ['  File "Mira.py", line 28, in <module>\n']]
['print("test")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("test")', ['EOFError: EOF when reading a line\n']]
['test', ['exit or logout to leave \n']]
['test', ['Traceback (most recent call last):\n']]
['test', ['  File "Mira.py", line 28, in <module>\n']]
['test', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['test', ['EOFError: EOF when reading a line\n']]
['test', ['exit or logout to leave \n']]
['test', ['Traceback (most recent call last):\n']]
['test', ['  File "Mira.py", line 28, in <module>\n']]
['test', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['test', ['EOFError: EOF when reading a line\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['exit or logout to leave \n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['Traceback (most recent call last):\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['  File "Mira.py", line 28, in <module>\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['EOFError: EOF when reading a line\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['exit or logout to leave \n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['Traceback (most recent call last):\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['  File "Mira.py", line 28, in <module>\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
["CantorPair(AutoAddressFunc([['1', '0'], ['0', '1'], ['2', '0'], ['0', '2'], ['2', '1'], ['1', '2'], ['4', '0']]),AutoAddressFunc([['0', '0'], ['0', '1'], ['0', '2'], ['3', '0']]))", ['EOFError: EOF when reading a line\n']]
['test', ['', NameError("name 'test' is not defined",)]]
['print("test")', ['', NameError("name 'argv' is not defined",)]]
['print("test")', ['', NameError("name 'argv' is not defined",)]]
['print("test")', ['exit or logout to leave \n']]
['print("test")', ['Traceback (most recent call last):\n']]
['print("test")', ['  File "Mira.py", line 28, in <module>\n']]
['print("test")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("test")', ['EOFError: EOF when reading a line\n']]
['print("test")', ['exit or logout to leave \n']]
['print("test")', ['Traceback (most recent call last):\n']]
['print("test")', ['  File "Mira.py", line 28, in <module>\n']]
['print("test")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("test")', ['EOFError: EOF when reading a line\n']]
['print("test")', ['', AttributeError("'str' object has no attribute 'input'",)]]
['print("test")', ['exit or logout to leave \n']]
['print("test")', ['Traceback (most recent call last):\n']]
['print("test")', ['  File "Mira.py", line 28, in <module>\n']]
['print("test")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("test")', ['EOFError: EOF when reading a line\n']]
['print("test")', ['', AttributeError("'str' object has no attribute 'input'",)]]
['print("WHY")', ['exit or logout to leave \n']]
['print("WHY")', ['Traceback (most recent call last):\n']]
['print("WHY")', ['  File "Mira.py", line 28, in <module>\n']]
['print("WHY")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("WHY")', ['EOFError: EOF when reading a line\n']]
['print("WHY")', ['', AttributeError("'str' object has no attribute 'input'",)]]
['print("Why"), exit', ['exit or logout to leave \n']]
['print("Why"), exit', ['Traceback (most recent call last):\n']]
['print("Why"), exit', ['  File "Mira.py", line 28, in <module>\n']]
['print("Why"), exit', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("Why"), exit', ['EOFError: EOF when reading a line\n']]
['print("Why"), exit', ['', AttributeError("'str' object has no attribute 'input'",)]]
['print("Why")', ['exit or logout to leave \n']]
['print("Why")', ['Traceback (most recent call last):\n']]
['print("Why")', ['  File "Mira.py", line 28, in <module>\n']]
['print("Why")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("Why")', ['EOFError: EOF when reading a line\n']]
['print("Why")', ['', AttributeError("'str' object has no attribute 'input'",)]]
['print("why")', ['exit or logout to leave \n']]
['print("why")', ['Traceback (most recent call last):\n']]
['print("why")', ['  File "Mira.py", line 28, in <module>\n']]
['print("why")', ['    inputtext = str(input("exit or logout to leave \\n"))\n']]
['print("why")', ['EOFError: EOF when reading a line\n']]
['print("why")', ['', AttributeError("'str' object has no attribute 'input'",)]]
